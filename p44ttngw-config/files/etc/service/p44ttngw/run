#!/bin/sh

# which forwarder binary to call
APP_NAME="gps_pkt_fwd"

# RAK831 reset pin GPIO
RAK831_RESET_GPIO=0

# static config (template) dir
CONFSRC="/etc/lora"
RUNCONF="/tmp/loracfg"
EXTRAGWCONF="/flash/extra_gw_conf.json"

# calculate EUI from MAC
# - MAC with FFFE in the middle
GATEWAY_EUI=$(ip link show eth0 | awk '/ether/ {print $2}' | awk -F\: '{print $1$2$3"FFFE"$4$5$6}')
# - make uppercase (busybox/ash proof)
GATEWAY_EUI=$(echo $GATEWAY_EUI | sed -e 'y/abcdef/ABCDEF/')

# prepare the config from templates
# - copy config
mkdir -p "${RUNCONF}"
cp -f ${CONFSRC}/* ${RUNCONF}
# - substitute gateway EUI
sed -i -r -e "s/##GATEWAY_EUI##/${GATEWAY_EUI}/" ${RUNCONF}/local_conf.json

# - insert fake GPS coordinates if we happen to have them
if [ -f ${EXTRAGWCONF} ]; then
  sed -i -r -e "/##EXTRA_GW_CONF##/r/flash/extra_gw_conf.json" -e "s/##EXTRA_GW_CONF##/,/" ${RUNCONF}/local_conf.json
else
  sed -i -r -e "s/##EXTRA_GW_CONF##//" ${RUNCONF}/local_conf.json
fi

# current lora_gateway lib for Mediatek (berkutta version) is hard-wired to /dev/spidev32766.1
# which is no longer available on newer OpenWrt-
if [ ! -e /dev/spidev32766.1 ]; then
  # create hard link to actual SPI device to use
  if [ -c /dev/spidev0.1 ]; then
    ln /dev/spidev0.1 /dev/spidev32766.1
  fi
fi

# perform RAK reset
echo "${RAK831_RESET_GPIO}" >/sys/class/gpio/export
echo "out" >/sys/class/gpio/gpio${RAK831_RESET_GPIO}/direction
echo "0" >/sys/class/gpio/gpio${RAK831_RESET_GPIO}/value
sleep 1
echo "1" >/sys/class/gpio/gpio${RAK831_RESET_GPIO}/value
sleep 1
echo "0" > /sys/class/gpio/gpio${RAK831_RESET_GPIO}/value
sleep 1

# run the packet forwarder, all output goes to log
cd ${RUNCONF}
exec ${APP_NAME} 2>&1
