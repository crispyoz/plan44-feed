#!/bin/sh /etc/rc.common
# Copyright (c) 2016-2020 plan44.ch/luz
START=99

UNIT_HOSTNAME="p44audiobox"

boot() {
	echo "[p44audiobox] preparing for runit"

  # softlink all runit supervise dirs to /var/run
  PREV=$(pwd)
  cd /etc/service
  SERVICES=*
  mkdir -v -p /var/run/runit
  for SERV in ${SERVICES}; do
    # create softlink if not yet existing
    if [ ! -h /etc/service/${SERV}/supervise ]; then
      rm -v -r /etc/service/${SERV}/supervise
      ln -v -s -f /var/run/runit/supervise.${SERV} /etc/service/${SERV}/supervise
    fi
    # check for log
    if [ -d /etc/service/${SERV}/log ]; then
      # create softlink if not yet existing
      if [ ! -h /etc/service/${SERV}/log/supervise ]; then
        rm -v -r /etc/service/${SERV}/log/supervise
        ln -v -s -f /var/run/runit/supervise.${SERV}.log /etc/service/${SERV}/log/supervise
      fi
    fi
  done
  cd ${PREV}

  # make sure no dhcp services (v4, v6) or RA is running at all
  # - in case a dhcp section exists for lan
  uci set dhcp.lan.dhcpv4=disabled
  uci set dhcp.lan.dhcpv6=disabled
  uci set dhcp.lan.ra=disabled
  uci set dhcp.lan.ignore=1
  # - in case a dhcp section exists for wlan
  uci set dhcp.wlan.dhcpv4=disabled
  uci set dhcp.wlan.dhcpv6=disabled
  uci set dhcp.wlan.ra=disabled
  uci set dhcp.wlan.ignore=1
  uci commit dhcp

  # update host name
  uci set system.@system[0].hostname="${UNIT_HOSTNAME}"
  uci commit system

  # initialize time zone
  if ! uci -q get system.@system[0].zonename; then
    uci set system.@system[0].timezone='CET-1CEST,M3.5.0,M10.5.0/3'
    uci set system.@system[0].zonename='Europe/Zurich'
    uci commit system
  fi

  # platform specifics
  # - Omega2
  if [ "${PLATFORM_IDENTIFIER}" = "p44-dsb-omega2" ]; then
    # FIXME: this is a ugly hack because for some reason Ethernet 1..4 pins get enabled, so we must disable them again
    # see page 59 of MT7688 datasheet:
    # - 1000003C is AGPIO_CFG register
    # - 00E001FF is found there after startup
    # - we write 00FE01FF to set bits 17..20 (but NOT bit 16, which is eth0!)
    devmem 0x1000003C 32 >/tmp/AGPIO_original.txt
    devmem 0x1000003C 32 0x00FE01FF
  fi
  # - all Raspberry-Pi variants
  if [ "${PLATFORM_IDENTIFIER:0:13}" = "raspberry-pi-" ]; then
    # for RPi DIY, we want HDMI console login enabled
    if [ "${PRODUCT_IS_DIY}" = "1" ]; then
      if ! grep -q "tty1::askfirst:/usr/libexec/login.sh" /etc/inittab; then
        [ -n "$(tail -c1 /etc/inittab)" ] && echo >>/etc/inittab
        echo "tty1::askfirst:/usr/libexec/login.sh" >>/etc/inittab
      fi
    fi
  fi

	#echo "[p44audiobox] silencing kernel messages to console now"
	#echo "0" >/proc/sys/kernel/printk

  # test for custom startup script
  if [ -f "/flash/p44_startup" ]; then
    source /flash/p44_startup
  fi

  # start runit
  /sbin/runsvdir-start &
}
