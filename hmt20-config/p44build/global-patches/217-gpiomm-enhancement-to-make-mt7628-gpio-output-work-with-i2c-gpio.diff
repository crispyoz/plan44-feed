--- /dev/null
+++ b/target/linux/generic/hack-4.14/990-luz-fix-i2c-gpio.patch
@@ -0,0 +1,66 @@
+--- a/drivers/gpio/gpio-mmio.c
++++ b/drivers/gpio/gpio-mmio.c
+@@ -324,6 +324,22 @@ static int bgpio_dir_out(struct gpio_chi
+ 	return 0;
+ }
+ 
++static int bgpio_dir_out_value_late(struct gpio_chip *gc, unsigned int gpio, int val)
++{
++	unsigned long flags;
++
++	spin_lock_irqsave(&gc->bgpio_lock, flags);
++
++	gc->bgpio_dir |= gc->pin2mask(gc, gpio);
++	gc->write_reg(gc->reg_dir, gc->bgpio_dir);
++
++	spin_unlock_irqrestore(&gc->bgpio_lock, flags);
++
++	gc->set(gc, gpio, val);
++
++	return 0;
++}
++
+ static int bgpio_dir_in_inv(struct gpio_chip *gc, unsigned int gpio)
+ {
+ 	unsigned long flags;
+@@ -479,7 +495,12 @@ static int bgpio_setup_direction(struct 
+ 		return -EINVAL;
+ 	} else if (dirout) {
+ 		gc->reg_dir = dirout;
+-		gc->direction_output = bgpio_dir_out;
++		if (flags & BGPIOF_OUTPUT_VALUE_LATE) {
++			gc->direction_output = bgpio_dir_out_value_late;
++		}
++		else {
++			gc->direction_output = bgpio_dir_out;
++		}
+ 		gc->direction_input = bgpio_dir_in;
+ 		gc->get_direction = bgpio_get_dir;
+ 	} else if (dirin) {
+--- a/drivers/gpio/gpio-mt7621.c
++++ b/drivers/gpio/gpio-mt7621.c
+@@ -255,8 +255,13 @@ mediatek_gpio_bank_probe(struct device *
+ 	ctrl = mtk->base + GPIO_REG_DCLR + (rg->bank * GPIO_BANK_STRIDE);
+ 	diro = mtk->base + GPIO_REG_CTRL + (rg->bank * GPIO_BANK_STRIDE);
+ 
++  /* Note: luz 2020-02-10: BGPIOF_OUTPUT_VALUE_LATE is a flag I had to add to gpio-mmio
++   *       to make sure the output value is set AFTER the direction is changed to
++   *       output. MT7688 GPIO logic does not store writes to the output register
++   *       for bits with the direction set to input!
++   */
+ 	ret = bgpio_init(&rg->chip, dev, 4,
+-			 dat, set, ctrl, diro, NULL, 0);
++			 dat, set, ctrl, diro, NULL, BGPIOF_OUTPUT_VALUE_LATE);
+ 	if (ret) {
+ 		dev_err(dev, "bgpio_init() failed\n");
+ 		return ret;
+--- a/include/linux/gpio/driver.h
++++ b/include/linux/gpio/driver.h
+@@ -260,6 +260,7 @@ int bgpio_init(struct gpio_chip *gc, str
+ #define BGPIOF_BIG_ENDIAN_BYTE_ORDER	BIT(3)
+ #define BGPIOF_READ_OUTPUT_REG_SET	BIT(4) /* reg_set stores output value */
+ #define BGPIOF_NO_OUTPUT		BIT(5) /* only input */
++#define BGPIOF_OUTPUT_VALUE_LATE	BIT(6) /* value can be set only AFTER changing direction to output */
+ 
+ #endif
+ 
